and|alternative to && operator|6
and_eq|alternative to &= operator|6
asm|insert an assembly instruction|6
auto|declare a local variable, or we can let the compiler to deduce the type of the variable from the initialization.|6
bitand|alternative to bitwise & operator|6
bitor|alternative to pipe operator|6
bool|declare a boolean variable|6
break|break out of a loop|6
case|a block of code in a switch statement|6
catch|handles exceptions from throw|6
char|declare a character variable|6
class|declare a class|6
compl|alternative to ~ operator|6
const|declare immutable data or functions that do not change data|6
const_cast|cast from const variables|6
continue|bypass iterations of a loop|6
default|default handler in a case statement|6
#define|All header files should have #define guards to prevent multiple inclusion.|6
delete|make dynamic memory available|6
do|looping construct|6
double|declare a double precision floating-point variable|6
dynamic_cast|perform runtime casts|6
else|alternate case for an if statement|6
enum|create enumeration types|6
exit()|ending a process|6
explicit|only use constructors when they exactly match|6
export|allows template definitions to be separated from their declarations|6
extern|declares a variable or function and specifies that it has external linkage|6
extern "C"|enables C function call from C++ by forcing C-linkage|6
false|a constant representing the boolean false value|6
float|declare a floating-point variable|6
for|looping construct|6
friend|grant non-member function access to private data|6
goto|jump to a different part of the program|6
if|execute code based on the result of a test|6
inline|optimize calls to short functions|6
int|declare an integer variable|6
long|declare a long integer variable|6
mutable|override a const variable|6
namespace|partition the global namespace by defining a scope|6
new|allocate dynamic memory for a new variable|6
not|alternative to ! operator|6
not_eq|alternative to != operator|6
operator|create overloaded operator functions|6
or|alternative to OR operator|6
or_eq|alternative to OR+EQUAL operator|6
private|declare private members of a class|6
protected|declare protected members of a class|6
public|declare public members of a class|6
register|request that a variable be optimized for speed|6
reinterpret_cast|change the type of a variable|6
short|declare a short integer variable|6
signed|modify variable type declarations|6
sizeof|return the size of a variable or type|6
static|create permanent storage for a variable|6
static_cast|perform a nonpolymorphic cast|6
struct|define a new structure|6
switch|execute code based on different possible values for a variable|6
template|create generic functions|6
this|a pointer to the current object|6
throw|throws an exception|6
true|a constant representing the boolean true value|6
try|execute code that can throw an exception|6
typedef|create a new type name from an existing type|6
typeid|describes an object|6
typename|declare a class or undefined type|6
union|a structure that assigns multiple variables to the same memory location|6
unsigned|declare an unsigned integer variable|6
using|import complete or partial namespaces into the current scope|6
virtual|create a function that can be overridden by a derived class|6
void|declare functions or data with no associated data type|6
volatile|warn the compiler about variables that can be modified unexpectedly|6
void|declare functions or data with no associated data type|6
wchar_t|declare a wide-character variable|6
while|looping construct|6
xor|alternative to ^ operator|6
xor_eq|alternative to ^= operator|6